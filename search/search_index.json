{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Obsidian%20dbfolder%20Features/","text":"Rows Add new row Edit cells directly on table If file frontmatter field does not exist, it will be created Headers Add new column Edit label of existed column Delete column Order column ascending/descending Drag & drop column. Order of the columns persisted Filters Global filters Event Driven Configurable select column with group_folder_column property. This column will be used to group the notes into subfolders with the same cell value. The subfolder will be created if it does not exist. CSV download button. Supports filters","title":"Obsidian dbfolder Features"},{"location":"Obsidian%20dbfolder%20Features/#rows","text":"Add new row Edit cells directly on table If file frontmatter field does not exist, it will be created","title":"Rows"},{"location":"Obsidian%20dbfolder%20Features/#headers","text":"Add new column Edit label of existed column Delete column Order column ascending/descending Drag & drop column. Order of the columns persisted","title":"Headers"},{"location":"Obsidian%20dbfolder%20Features/#filters","text":"Global filters","title":"Filters"},{"location":"Obsidian%20dbfolder%20Features/#event-driven","text":"Configurable select column with group_folder_column property. This column will be used to group the notes into subfolders with the same cell value. The subfolder will be created if it does not exist. CSV download button. Supports filters","title":"Event Driven"},{"location":"Whats%20inside%20database%20view/","text":"Whats inside the database view? Database view read the yaml configuration inside .md file and render a react DOM. You can edit directly the yaml configuration inside the .md file or use the table features to edit the columns. Information Details about your database - name : Name asociated to your database (TODO) - description : extra information explaining the purpose of the database (TODO) Database The columns key is used to charge the correct information when you charge the react-table. Each column supports all the literals of react-table column configurations. Mandatory: - input : indicates the type of the column (text,markdown & number) - key : name of obsidian field metadata in your notes (inline not supported edition yet) - accessor : is the key of the data. Must be unique - label : name of the column Optional: - position : order of the columns Local configuration enable_show_state : show react table state at bottom of the page. It has a default value & local value of each database. group_folder_column : name of the column used to group the notes into subfolders with the same cell value. The subfolder will be created if it does not exist. It must be a select column type. --- database-plugin: basic --- <%% name: undefined description: undefined columns: title: input: text accessor: title label: title key: title position: 1 director: input: text accessor: director label: director key: director position: 2 Year: input: number accessor: Year label: Year key: Year position: 3 Calification: input: select accessor: Calification label: Calification key: Calification position: 5 view_state: input: select accessor: view_state key: view_state label: view_state position: 4 config: enable_show_state: false group_folder_column: view_state %%>","title":"Whats inside database view"},{"location":"Whats%20inside%20database%20view/#whats-inside-the-database-view","text":"Database view read the yaml configuration inside .md file and render a react DOM. You can edit directly the yaml configuration inside the .md file or use the table features to edit the columns.","title":"Whats inside the database view?"},{"location":"Whats%20inside%20database%20view/#information","text":"Details about your database - name : Name asociated to your database (TODO) - description : extra information explaining the purpose of the database (TODO)","title":"Information"},{"location":"Whats%20inside%20database%20view/#database","text":"The columns key is used to charge the correct information when you charge the react-table. Each column supports all the literals of react-table column configurations. Mandatory: - input : indicates the type of the column (text,markdown & number) - key : name of obsidian field metadata in your notes (inline not supported edition yet) - accessor : is the key of the data. Must be unique - label : name of the column Optional: - position : order of the columns","title":"Database"},{"location":"Whats%20inside%20database%20view/#local-configuration","text":"enable_show_state : show react table state at bottom of the page. It has a default value & local value of each database. group_folder_column : name of the column used to group the notes into subfolders with the same cell value. The subfolder will be created if it does not exist. It must be a select column type. --- database-plugin: basic --- <%% name: undefined description: undefined columns: title: input: text accessor: title label: title key: title position: 1 director: input: text accessor: director label: director key: director position: 2 Year: input: number accessor: Year label: Year key: Year position: 3 Calification: input: select accessor: Calification label: Calification key: Calification position: 5 view_state: input: select accessor: view_state key: view_state label: view_state position: 4 config: enable_show_state: false group_folder_column: view_state %%>","title":"Local configuration"},{"location":"about/","text":"","title":"About"}]}